import os
import pandas as pd
import config
import load_data
import process
import EDA
from utils import _create_log

import pyzipper

def load_zip_to_dataframe(zip_path):
    with pyzipper.AESZipFile(zip_path, 'r') as zip_ref:
        file_data = []
        for file_path in zip_ref.namelist():
            if file_path.endswith("/"):
                continue
            file_name = os.path.basename(file_path)
            file_ext = os.path.splitext(file_name)[1].lower().replace('.', '')
            file_data.append({
                'zip_path': zip_path,
                'inner_path': file_path,
                'file_name': file_name,
                'file_type': file_ext or 'unknown'
            })
    return pd.DataFrame(file_data)

def pipeline():
    # BioClimatic_Monthly_PA_cube_train_head = load_data.BioClimatic_Monthly_PA_cube_train.head()
    # BioClimatic_Monthly_PO_cube_train_head = load_data.BioClimatic_Monthly_PO_cube_train.head()
    # BioClimatic_Monthly_PO_cube_train_head = load_data.BioClimatic_Monthly_PO_cube_train.head()
    # BioClimatic_Monthly_PA_value_train_head = load_data.BioClimatic_Monthly_PA_value_train.head()
    # BioClimatic_Monthly_PO_value_train_head = load_data.BioClimatic_Monthly_PO_value_train.head()
    # BioClimatic_Average_1981_2010_Rasters_train_head = load_data.BioClimatic_Average_1981_2010_Rasters_train.head()
    # Climatic_Monthly_2000_2019_Rasters_train_head = load_data.Climatic_Monthly_2000_2019_Rasters_train.head()
    # ASTER_Elevation_Rasters_train_head = load_data.ASTER_Elevation_Rasters_train.head()
    # HumanFootprint_Rasters_train_head = load_data.HumanFootprint_Rasters_train.head()
    # LandCover_Rasters_PA_train_head = load_data.LandCover_Rasters_PA_train.head()
    # LandCover_Rasters_PO_train_head = load_data.LandCover_Rasters_PO_train.head()
    # LandCover_MODIS_Terra_Aqua_train_head = load_data.LandCover_MODIS_Terra_Aqua_train.head()
    # Soilgrids_Rasters_train_head = load_data.Soilgrids_Rasters_train.head()
    # Soilgrids_Rasters_PA_train_head = load_data.Soilgrids_Rasters_PA_train.head()
    # Soilgrids_Rasters_PA_train_head = load_data.Soilgrids_Rasters_PA_train.head()
    # BioClimatic_Average_1981_2010_PA_Values_train_head = load_data.BioClimatic_Average_1981_2010_PA_Values_train.head()
    # BioClimatic_Average_1981_2010_PO_Values_train_head = load_data.BioClimatic_Average_1981_2010_PO_Values_train.head()
    # Elevation_PA_Values_train_head = load_data.Elevation_PA_Values_train.head()
    # Elevation_PO_Values_train_head = load_data.Elevation_PO_Values_train.head()
    # HumanFootprint_PA_Values_train_head = load_data.HumanFootprint_PA_Values_train.head()
    # HumanFootprint_PO_Values_train_head = load_data.HumanFootprint_PO_Values_train.head()
    # LandCover_PA_Values_train_head = load_data.LandCover_PA_Values_train.head()
    # LandCover_PO_Values_train_head = load_data.LandCover_PO_Values_train.head()
    # Soilgrids_PA_Values_train_head = load_data.Soilgrids_PA_Values_train.head()
    # Soilgrids_PO_Values_train_head = load_data.Soilgrids_PO_Values_train.head()
    # PA_SatellitePatches_NIR_train_paths_head = load_data.PA_SatellitePatches_NIR_train_paths.head()
    # PA_SatellitePatches_RGB_train_paths_head = load_data.PA_SatellitePatches_RGB_train_paths.head()
    # PO_SatellitePatches_NIR_train_paths_head = load_data.PO_SatellitePatches_NIR_train_paths.head()
    # PO_SatellitePatches_RGB_train_paths_head = load_data.PO_SatellitePatches_RGB_train_paths.head()
    # PA_SatellitePatches_NIR_train_head = load_data.PA_SatellitePatches_NIR_train.head()
    # PA_SatellitePatches_RGB_train_head = load_data.PA_SatellitePatches_RGB_train.head()
    # PO_SatellitePatches_NIR_train_head = load_data.PO_SatellitePatches_NIR_train.head()
    # PO_SatellitePatches_RGB_train_head = load_data.PO_SatellitePatches_RGB_train.head()
    # SatelliteTimeSeries_train_head = load_data.SatelliteTimeSeries_train.head()
    # landsat_SatelliteTimeSeries_train_head = load_data.landsat_SatelliteTimeSeries_train.head()
    # landsat_SatelliteTimeSeries_train_head = load_data.landsat_SatelliteTimeSeries_train.head()
    # PA_metadata_train_head = load_data.PA_metadata_train.head()
    # PO_metadata_train_head = load_data.PO_metadata_train.head()
    # print(BioClimatic_Monthly_PA_cube_train_head)
    # print(BioClimatic_Monthly_PO_cube_train_head)
    # print(BioClimatic_Monthly_PO_cube_train_head)
    # print(BioClimatic_Monthly_PA_value_train_head)
    # print(BioClimatic_Monthly_PO_value_train_head)
    # print(BioClimatic_Average_1981_2010_Rasters_train_head)
    # print(Climatic_Monthly_2000_2019_Rasters_train_head)
    # print(ASTER_Elevation_Rasters_train_head)
    # print(HumanFootprint_Rasters_train_head)
    # print(LandCover_Rasters_PA_train_head)
    # print(LandCover_Rasters_PO_train_head)
    # print(LandCover_MODIS_Terra_Aqua_train_head)
    # print(Soilgrids_Rasters_train_head)
    # print(Soilgrids_Rasters_PA_train_head)
    # print(Soilgrids_Rasters_PA_train_head)
    # print(BioClimatic_Average_1981_2010_PA_Values_train_head)
    # print(BioClimatic_Average_1981_2010_PO_Values_train_head)
    # print(Elevation_PA_Values_train_head)
    # print(Elevation_PO_Values_train_head)
    # print(HumanFootprint_PA_Values_train_head)
    # print(HumanFootprint_PO_Values_train_head)
    # print(LandCover_PA_Values_train_head)
    # print(LandCover_PO_Values_train_head)
    # print(Soilgrids_PA_Values_train_head)
    # print(Soilgrids_PO_Values_train_head)
    # print(PA_SatellitePatches_NIR_train_paths_head)
    # print(PA_SatellitePatches_RGB_train_paths_head)
    # print(PO_SatellitePatches_NIR_train_paths_head)
    # print(PO_SatellitePatches_RGB_train_paths_head)
    # print(PA_SatellitePatches_NIR_train_head)
    # print(PA_SatellitePatches_RGB_train_head)
    # print(PO_SatellitePatches_NIR_train_head)
    # print(PO_SatellitePatches_RGB_train_head)
    # print(SatelliteTimeSeries_train_head)
    # print(landsat_SatelliteTimeSeries_train_head)
    # print(landsat_SatelliteTimeSeries_train_head)
    # print(PA_metadata_train_head)
    # print(PO_metadata_train_head)
    # _create_log(BioClimatic_Monthly_PA_cube_train_head)
    # _create_log(BioClimatic_Monthly_PO_cube_train_head)
    # _create_log(BioClimatic_Monthly_PO_cube_train_head)
    # _create_log(BioClimatic_Monthly_PA_value_train_head)
    # _create_log(BioClimatic_Monthly_PO_value_train_head)
    # _create_log(BioClimatic_Average_1981_2010_Rasters_train_head)
    # _create_log(Climatic_Monthly_2000_2019_Rasters_train_head)
    # _create_log(ASTER_Elevation_Rasters_train_head)
    # _create_log(HumanFootprint_Rasters_train_head)
    # _create_log(LandCover_Rasters_PA_train_head)
    # _create_log(LandCover_Rasters_PO_train_head)
    # _create_log(LandCover_MODIS_Terra_Aqua_train_head)
    # _create_log(Soilgrids_Rasters_train_head)
    # _create_log(Soilgrids_Rasters_PA_train_head)
    # _create_log(Soilgrids_Rasters_PA_train_head)
    # _create_log(BioClimatic_Average_1981_2010_PA_Values_train_head)
    # _create_log(BioClimatic_Average_1981_2010_PO_Values_train_head)
    # _create_log(Elevation_PA_Values_train_head)
    # _create_log(Elevation_PO_Values_train_head)
    # _create_log(HumanFootprint_PA_Values_train_head)
    # _create_log(HumanFootprint_PO_Values_train_head)
    # _create_log(LandCover_PA_Values_train_head)
    # _create_log(LandCover_PO_Values_train_head)
    # _create_log(Soilgrids_PA_Values_train_head)
    # _create_log(Soilgrids_PO_Values_train_head)
    # _create_log(PA_SatellitePatches_NIR_train_paths_head)
    # _create_log(PA_SatellitePatches_RGB_train_paths_head)
    # _create_log(PO_SatellitePatches_NIR_train_paths_head)
    # _create_log(PO_SatellitePatches_RGB_train_paths_head)
    # _create_log(PA_SatellitePatches_NIR_train_head)
    # _create_log(PA_SatellitePatches_RGB_train_head)
    # _create_log(PO_SatellitePatches_NIR_train_head)
    # _create_log(PO_SatellitePatches_RGB_train_head)
    # _create_log(SatelliteTimeSeries_train_head)
    # _create_log(landsat_SatelliteTimeSeries_train_head)
    # _create_log(landsat_SatelliteTimeSeries_train_head)
    # _create_log(PA_metadata_train_head)
    # _create_log(PO_metadata_train_head)
    file = "C:/Users/shlomias/OneDrive - Azrieli - Jerusalem College of Engineering/Desktop/project_GeoCELF2025/data/train_data/BioclimTimeSeries/value/GLC25-PA-train-bioclimatic_monthly.csv"
    df = pd.read_csv(file)
    print(df.head())
    
if __name__ == "__main__":
    pipeline()
    
